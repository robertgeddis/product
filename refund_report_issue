-- Example within full query. Issue is we rank billed_service_start_date to the get the latest that was a type = 'AuthAndCapture' and status = 'SUCCESS'.
-- In this example that is 2024-09-06 but it should be 2024-12-06 - this was however a Failure at AuthAndCapture and a success at PriorAuthCapture

--- Full example
select 
  upper(m.countrycode) as Country,
  sp.memberid as MemberID,
  sp.subscriptionId,
  t.transaction_id,
  date(sp.subscriptionDateCreated) as 'Upgrade Date',
  date(dg.datecreated) as 'Downgrade Requested Date',
  date(sp.nextPaymentdate) as 'Next Payment Date',
  sp.pricePlanDurationInMonths as 'Subscription in Months',
  sp.pricePlanFee as 'Subscription Amount',

  datediff(day,date(sp.firstPaymentDate),date(sp.nextPaymentDate)) as 'Total Days Premium',  --- Covers the entire time user was premium
  datediff(day,date(t.billed_service_start_date),date(sp.nextPaymentdate)) as 'Days in Period',  --- Covers the time user was premium on current subscription plan 
  datediff(day,date(current_date),date(sp.nextPaymentdate)) as 'Days till Basic', --- How many days of premium are left
  
  datediff(day,date(dg.dateCreated),date(sp.nextPaymentdate))-30 as 'Days to Refund', --- Law allows for a max 30 days cancellation notice
  sp.pricePlanFee/datediff(day,date(t.billed_service_start_date),date(sp.nextPaymentdate)) as 'Daily Rate', --- Subscription fee by day
  
  (cast(sp.pricePlanFee as numeric)/cast(datediff(day,date(t.billed_service_start_date),date(sp.nextPaymentdate)) as numeric))*
  (cast(datediff(day,date(dg.dateCreated),date(sp.nextPaymentdate))-30 as numeric)) as 'Refund Amount' --- Mulitples 'Days to Refund' by 'Daily Rate' for the sum to be refunded
  
    
from  (select distinct date_created, billed_service_start_date, subscription_plan_id, transaction_id, country_code, member_id
      from
        (select distinct date_created, billed_service_start_date, subscription_plan_id, id as transaction_id, country_code, member_id,
          rank() over (partition by member_id order by date_created desc) as ranked
        from intl.transaction
        where type = 'AuthAndCapture'
          and status = 'SUCCESS'
          and amount > 0 
          group by 1,2,3,4,5,6) req
            where ranked=1
            group by 1,2,3,4,5,6) t
                                            
  join intl.hive_subscription_plan sp       on sp.subscriptionId = t.subscription_plan_id 
                                            and sp.countrycode = t.country_code                                      

  join intl.hive_member m                   on t.member_id = m.memberid 
                                            and t.country_code = m.countrycode 
                                            and m.IsInternalAccount = 'false' 
                                            and m.ClosedForFraud = 'false'
                                            and m.countrycode not in ('uk','ca','au','nz','ch') --- These countries are not legally registered in Germany 
                                            and m.memberStatus = 'Premium' --- Only looking at current premiums 
                                            
  join intl.hive_event dg                   on dg.memberid = m.memberid
                                            and dg.countrycode = m.countrycode
                                            and dg.name = 'AccountActionRequest' --- When the downgrade was requested
                                            and dg.accountaction = 'Downgrade'
                                            and dg.actionOccursOn <> 'Now'  --- Only downgrades schedulled to occur at the end of premium period and did not happen immediately
                                            and dg.datecreated >= sp.subscriptionDateCreated
                                            and dg.objectid = sp.subscriptionId
                                                                                      
  left join intl.transaction cb              on cb.member_id = t.member_id
                                            and cb.country_code = t.country_code
                                            and cb.date_created > t.date_created
                                            and cb.type = 'Chargeback' 
                                            and cb.amount > 0 
                                            and cb.status = 'SUCCESS'
                                            and cb.subscription_plan_id = t.subscription_plan_id
                                            
where date(sp.subscriptionDateCreated) >= '2022-03-01'  --- Legal changes to German law covers those upgrading after this date
  and sp.nextPaymentDateAction = 'Downgrade'  --- Only including those who've requested a downgrade
  and sp.pricePlanDurationInMonths <> 1 --- Legal changes only impact users with subscriptions that are longer than a month
  and datediff(day,date(dg.dateCreated),date(sp.nextPaymentdate)) > 30  --- Must be more than 30 days left from requesting downgrade until the next payment date be eligiable for refund
  and datediff(day,date(sp.firstPaymentDate),date(sp.nextPaymentDate)) > datediff(day,date(t.billed_service_start_date),date(sp.nextPaymentdate)) --- Excludes the first transaction if multiple auto-renews have occurred (difference in days would be the same on the first transaction)
  and cb.member_id is null -- Added 15.08.2022 to exclude those with ChargeBack

  and sp.countrycode = 'de'
  and sp.memberid = '12584734'

-- Simple example
select 
  tt.id,
  tt.type,
  tt.status,
  sp.priceplanfee,
  date(tt.billed_service_start_date) as billed_service_start_date,
  date(sp.nextPaymentdate) as next_payment_date,
  sp.pricePlanFee/datediff(day,date(tt.billed_service_start_date),date(sp.nextPaymentdate))

from intl.transaction tt
join intl.hive_subscription_plan sp on tt.subscription_plan_id = sp.subscriptionid and tt.member_id = sp.memberid and tt.country_code = sp.countrycode
where tt.country_code = 'de'
and tt.member_id = '12584734'
and tt.billed_service_start_date is not null

order by tt.billed_service_start_date asc
