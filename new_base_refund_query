select distinct fpd.countrycode, fpd.memberid, fpd.subscriptionDateCreated, lpd.subscriptionid, lbsd.billed_service_start_date, fpd.firstPaymentDate, lpd.nextPaymentDate
from
(select countrycode, memberid, subscriptionDateCreated, firstPaymentDate from
  (select countrycode, memberid, subscriptionDateCreated, firstPaymentDate, rank() over (partition by memberid order by firstPaymentDate asc) as ranked_firstPaymentDate
      from
      (select distinct ab.countrycode, ab.memberid, sp.subscriptionDateCreated, sp.firstPaymentDate
      from intl.transaction tt
      join intl.hive_subscription_plan sp on tt.member_id = sp.memberid and tt.country_code = sp.countrycode and tt.subscription_plan_id = sp.subscriptionid
      left join (select distinct sp.countrycode, sp.memberid
                  from intl.transaction tt
                  join intl.hive_subscription_plan sp on tt.member_id = sp.memberid and tt.country_code = sp.countrycode and tt.subscription_plan_id = sp.subscriptionid
                  where tt.type in ('PriorAuthCapture','AuthAndCapture')
                    and tt.status = 'SUCCESS'
                    and tt.amount > 0
                    and sp.promotionCode = 'canceldowngrade30'
                    and date(sp.subscriptionDateCreated) >= '2022-03-01'
                    and date(sp.subscriptionDateCreated) < date(current_date)
                    and sp.countrycode not in ('uk','ca','au','nz','ch')
                    and sp.pricePlanDurationInMonths <> 1 
                  group by 1,2) ab on sp.memberid = ab.memberid and sp.countrycode = ab.countrycode       
      where tt.type in ('PriorAuthCapture','AuthAndCapture') 
        and tt.status = 'SUCCESS'
        and tt.amount > 0
        and date(sp.subscriptionDateCreated) >= '2022-03-01'
        and date(sp.subscriptionDateCreated) < date(current_date)
        and sp.countrycode not in ('uk','ca','au','nz','ch')
        and sp.pricePlanDurationInMonths <> 1
      group by 1,2,3,4) ab
      where memberid is not null) cd
      where ranked_firstPaymentDate = 1
      group by 1,2,3,4) fpd
join 
(select countrycode, memberid, nextPaymentDate, subscriptionid from
  (select countrycode, memberid, nextPaymentDate, subscriptionid, rank() over (partition by memberid order by nextPaymentDate desc) as ranked_nextPaymentDate
      from
      (select distinct sp.countrycode, sp.memberid, sp.subscriptionid, sp.nextPaymentDate
      from intl.transaction tt
      join intl.hive_subscription_plan sp on tt.member_id = sp.memberid and tt.country_code = sp.countrycode and tt.subscription_plan_id = sp.subscriptionid 
      where tt.type in ('PriorAuthCapture','AuthAndCapture') 
        and tt.status = 'SUCCESS'
        and tt.amount > 0
        and date(sp.subscriptionDateCreated) >= '2022-03-01'
        and date(sp.subscriptionDateCreated) < date(current_date)
        and sp.countrycode not in ('uk','ca','au','nz','ch')
        and sp.pricePlanDurationInMonths <> 1
        and sp.nextPaymentDateAction = 'Downgrade') ef
       ) gh
      where ranked_nextPaymentDate = 1  
      group by 1,2,3,4) lpd on fpd.countrycode = lpd.countrycode and fpd.memberid = lpd.memberid
join 
(select countrycode, memberid, billed_service_start_date from
  (select countrycode, memberid, billed_service_start_date, rank() over (partition by memberid order by billed_service_start_date desc) as ranked_billed_service_start_date
      from
      (select distinct sp.countrycode, sp.memberid, tt.billed_service_start_date
      from intl.transaction tt
      join intl.hive_subscription_plan sp on tt.member_id = sp.memberid and tt.country_code = sp.countrycode and tt.subscription_plan_id = sp.subscriptionid 
      where tt.type = 'AuthAndCapture' 
        and tt.status = 'SUCCESS'
        and tt.amount > 0
        and date(sp.subscriptionDateCreated) >= '2022-03-01'
        and date(sp.subscriptionDateCreated) < date(current_date)
        and sp.countrycode not in ('uk','ca','au','nz','ch')
        and sp.pricePlanDurationInMonths <> 1
      group by 1,2,3) ij
      ) kl
      where ranked_billed_service_start_date = 1
      group by 1,2,3) lbsd on lbsd.countrycode = lpd.countrycode and lbsd.memberid = lpd.memberid
