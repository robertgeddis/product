with jobs as (
  select 
    dd.year,
    upper(jb.country_code) as country,
    initcap(jb.vertical_id) as vertical,
    datediff('hour', jb.date_created, ja.date_created) as time_between_job_app
  from intl.job jb
  join intl.job_application ja on jb.id = ja.job_id and jb.country_code = ja.country_code 
    and jb.date_created < ja.date_created and ja.was_sent_automatically = 'false'
  join reporting.dw_d_date dd on dd.date = date(jb.date_created) and dd.date < date(current_date) and dd.year >= year(current_date)-2 
  where jb.search_status = 'Approved'
),

basics as (
  select
     dd.year,
     upper(m.countryCode) as country,
     case when (m.vertical is null or m.vertical = '') then 'Childcare' else initcap(m.vertical) end as vertical,
     count(distinct memberid) as basics
  from intl.hive_member m
  join reporting.dw_d_date dd on dd.date = date(m.dateMemberSignup) and dd.date < date(current_date) and dd.year >= year(current_date)-2 
  where IsInternalAccount = 'false'
    and lower(m.role) = 'seeker'
  group by 1,2,3
),

premiums as (
  select
      dd.year, 
      upper(m.countrycode) as country, 
      case when (m.vertical is null or m.vertical = '') then 'Childcare' else initcap(m.vertical) end as vertical,
      count(distinct sp.subscriptionId) as premiums,
      count(distinct case when date(sp.subscriptionDateCreated) = date(m.dateMemberSignup) then sp.subscriptionId end) as day1s,
      count(distinct case when date(m.dateFirstPremiumSignup) = date(sp.subscriptionDateCreated) and date(sp.subscriptionDateCreated) != date(m.dateMemberSignup) then sp.subscriptionId end) as nths,
      count(distinct case when date(m.dateFirstPremiumSignup) != date(sp.subscriptionDateCreated) then sp.subscriptionId end) as reupgrades
  from intl.transaction t
  join intl.hive_subscription_plan sp on sp.subscriptionId = t.subscription_plan_id and sp.countrycode = t.country_code
  join intl.hive_member m on t.member_id = m.memberid and t.country_code = m.countrycode 
  join reporting.dw_d_date dd on dd.date = date(sp.subscriptionDateCreated) and dd.date < date(current_date) and dd.year >= year(current_date)-2 
    and m.isinternalaccount = 'false'
    and lower(m.role) = 'seeker' 
  where t.type in ('PriorAuthCapture','AuthAndCapture') and t.status = 'SUCCESS' and t.amount > 0
  group by 1,2,3
)

select
  coalesce(j.year, b.year, p.year) as year,
  coalesce(j.country, b.country, p.country) as country,
  coalesce(j.vertical, b.vertical, p.vertical) as vertical,
  approximate_median(j.time_between_job_app) as median_hours_between_job_app,
  ifnull(b.basics,0) as basics,
  ifnull(p.premiums,0) as premiums,
  ifnull(p.day1s,0) as day1s,
  ifnull(p.nths,0) as nths,
  ifnull(p.reupgrades,0) as reupgrades 
from jobs j
left join basics b    on j.year = b.year and j.country = b.country and j.vertical = b.vertical
left join premiums p  on j.year = p.year and j.country = p.country and j.vertical = p.vertical
group by 1,2,3,5,6,7,8,9 order by 1,2,3
